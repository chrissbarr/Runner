<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_duck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,view_manager);
instance_create(0,0,ui_obj);
instance_create(0,0,box_spawner_obj);



size = 64;
first_falling=true;
points = 0;
grav = 2;
jump = false;
move_speed = 12;
jump_force = 18;
grav_rate = 1.6;
auto_pilot = false;
x = view_wview / 2;
y = 2 * room_height / 5 ;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//constant motion right
if(!first_falling)
{
    x += move_speed;
    //sprite_index = player_run;   
}

// Apply gravity (and jumping)
y = y+grav;
grav+=grav_rate;
if( grav&gt;=20 ) grav=20;



// Check for block to right
if(collision_block(x+sprite_width/2,y-sprite_height/2))
{
    move_speed=0;
} else if(collision_block(x,y)) // Check for block beneath
{
    grav=0;
    y = box_spawner_obj.pos_y-box_spawner_obj.block_base_width/2;
    sprite_index = player_run;
}



//Check for Jump
if((keyboard_check_pressed(vk_space) || mouse_check_button_pressed(mb_any)) &amp;&amp; grav = 0)
    {
    jump_scr();
    }
    
//Increase Speeds
/*
move_speed = move_speed*1.01;
grav_rate = grav_rate*1.01;
jump_force = jump_force*1.01;
*/
    
    
//Reset if dead
if(y&gt;box_spawner_obj.pos_y+250)
{
    if(!instance_exists(score_screen_obj))
    {
        instance_create(0,0,score_screen_obj);
        highscore_add("Score",real(points)); 
        move_speed = 0;
    }   
}
    
    
//AUTO-PILOT
if(auto_pilot)
{
    if(!collision_block(x+15,y+1)  &amp;&amp; grav = 0)
        jump_scr();
}

if(debug_mode)
{
    if(keyboard_check_pressed(vk_right))
        room_speed += 30;
    if(keyboard_check_pressed(vk_left))
        room_speed -= 30;
}

//Check if the player is falling
if(y&gt;box_spawner_obj.pos_y)
    sprite_index = player_falling;
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>highscore_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(debug_mode)
    auto_pilot =! auto_pilot;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed=room_speed*2
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
