<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.debug_draw = false;

night = -40;
night_change = 0.05;

game_speed_rate = 0.5;
game_speed_max = 90;
game_speed_default = 30;
game_speed = game_speed_default;

instance_create(0, 0, view_manager);
instance_create(0, 0, ui_obj);
instance_create(0, 0, box_spawner_obj);
button_pause = instance_create(0, 0, pause_button_obj);
player = instance_create(view_wview / 2, 2 * room_height / 5, player_obj);

repeat (6)
{
    instance_create(round(random(view_wview * 3)), round(random(600)), cloud_obj);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.paused != true)
{
    night += night_change;

    if(night &gt;= 120 || night &lt;= -50) {
        night_change =- night_change;
    }
        
    var night_clamped = clamp(night, 0, 80);        
    global.bg_color = make_color_hsv(183 / 360 * 255 + night_clamped / 4, (25 / 100) * 255 + night_clamped / 2, (96 - night_clamped) / 100 * 255);

    if (game_speed &lt; game_speed_max) 
    {
        game_speed += game_speed_rate / room_speed;
    }
    
    room_speed = clamp(round(game_speed), 5, 300);    
}

if (player.dead) 
{
    if (!instance_exists(score_screen_obj))
    {
        instance_create(0, 0, score_screen_obj);
        highscore_add("Score", real(player.points)); 
        instance_deactivate_object(button_pause);
        game_speed = game_speed_default;
    }  
}

if (M_DEBUG) {
    if (keyboard_check_pressed(ord('D'))) 
    {
        global.debug_draw = !global.debug_draw;
    }
        
    // reset highscore
    if (keyboard_check_pressed(ord('R'))) 
    {
        highscore_clear();
    }    
    
    if (keyboard_check_pressed(vk_right)) 
    {
        game_speed += 10;
    }
    
    if (keyboard_check_pressed(vk_left))
    {
        game_speed -= 10;
    }
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug_draw) 
{
    draw_set_color(c_black);
    draw_set_font(version_font);
    
    var str = M_VERSION;
    draw_text(view_wview[0] - string_width(str), view_hview[0] - string_height(str), str);
    
    var str = "Speed: " + string(room_speed);
    draw_text(view_wview[0] - string_width(str), view_hview[0] - string_height(str) * 2, str);
    
    var str = "FPS: " + string(fps);
    draw_text(view_wview[0] - string_width(str), view_hview[0] - string_height(str) * 3, str);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
